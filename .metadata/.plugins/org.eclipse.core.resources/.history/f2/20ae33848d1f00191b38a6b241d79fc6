package com.revature.test;

import java.io.IOException;

import org.apache.hadoop.io.DoubleWritable;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mrunit.mapreduce.MapDriver;
import org.apache.hadoop.mrunit.mapreduce.MapReduceDriver;
import org.apache.hadoop.mrunit.mapreduce.ReduceDriver;
import org.junit.Before;
import org.junit.Test;

import com.revature.Q5_Mapper;
import com.revature.Q5_Reducer;

public class Q5_Test {
	
	private MapDriver<LongWritable, Text, Text, DoubleWritable> mapDriver;
	private ReduceDriver<Text, DoubleWritable, Text, DoubleWritable> reduceDriver;
	private MapReduceDriver<LongWritable, Text, Text, DoubleWritable, Text, DoubleWritable> mapReduceDriver;
	
	@Before
	public void setUp(){
		
		Q5_Mapper mapper = new Q5_Mapper();
		mapDriver = new MapDriver<LongWritable, Text, Text, DoubleWritable>();
		mapDriver.setMapper(mapper);
		
		Q5_Reducer reducer = new Q5_Reducer();
		reduceDriver = new ReduceDriver<Text, DoubleWritable, Text, DoubleWritable>();
		reduceDriver.setReducer(reducer);
		
		mapReduceDriver = new MapReduceDriver<LongWritable, Text, Text, DoubleWritable, Text, DoubleWritable>();
		mapReduceDriver.setMapper(mapper);
		mapReduceDriver.setReducer(reducer);
	}
	
	@Test
	public void testMapper() throws IOException{
		String str = "\"United States\",\"USA\",\"Time-related underemployment, female (% of employment)\",\"SL.EMP.UNDR.FE.ZS\",\"\",\"\",\"\",\"\","
				+ "\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\","
				+ "\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"2.5699999332428\",\"2.84999990463257\",\"3.19000005722046\",\"3.48000001907349\","
				+ "\"3.42000007629395\",\"3.24000000953674\",\"3.03999996185303\",\"3.0699999332428\",\"3.88000011444092\",\"6.19000005722046\","
				+ "\"6.46000003814697\",\"6.36999988555908\",\"6.05999994277954\",\"5.96000003814697\",\"5.34999990463257\",\"4.6100001335144\","
				+ "\"4.15999984741211\",";
		
		mapDriver.withInput(new LongWritable(1), new Text(str));
		
		mapDriver.withOutput(new Text(""), new DoubleWritable());
		
		mapDriver.run();
	}
	
	@Test
	public void testReducer(){
		//write test
	}
	
	@Test
	public void testMapReduce(){
		//write test
	}

}
